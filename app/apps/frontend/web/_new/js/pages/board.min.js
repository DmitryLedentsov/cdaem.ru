/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 3);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/js/pages/board.js":
/*!*******************************!*\
  !*** ./src/js/pages/board.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

(function ($) {
  "use strict";

  $('.top-advert-slider').slick({
    centerMode: true,
    slidesToShow: 1,
    arrows: true,
    dots: false,
    infinite: true,
    variableWidth: true
  });

  if (_typeof($(document).autoComplete) === (typeof Function === "undefined" ? "undefined" : _typeof(Function))) {
    $('#search-form-autocomplete').autoComplete({
      resolver: 'custom',
      formatResult: function formatResult(item) {
        return {
          value: item.text,
          text: item.text,
          html: '<div>' + item.text + '</div>'
        };
      },
      events: {
        search: function search(qry, callback) {
          callback([{
            "value": 1,
            "text": "Москва"
          }, {
            "value": 2,
            "text": "Самара"
          }, {
            "value": 3,
            "text": "Санкт-Петербург"
          }, {
            "value": 4,
            "text": "Екатеринбург"
          }, {
            "value": 5,
            "text": "Другой город 1"
          }, {
            "value": 6,
            "text": "Другой город 2"
          }, {
            "value": 7,
            "text": "Другой город 3"
          }, {
            "value": 8,
            "text": "Другой город 4"
          }, {
            "value": 9,
            "text": "Другой город 5"
          }, {
            "value": 10,
            "text": "Другой город 6"
          }, {
            "value": 11,
            "text": "Другой город 7"
          }]);
        }
      }
    });
    $('#lookup-board-form-autocomplete').autoComplete({
      resolver: 'custom',
      formatResult: function formatResult(item) {
        return {
          value: item.text,
          text: item.text,
          html: '<div>' + item.text + '</div>'
        };
      },
      events: {
        search: function search(qry, callback) {
          callback([{
            "value": 1,
            "text": "Метро"
          }, {
            "value": 2,
            "text": "Югозападная"
          }, {
            "value": 3,
            "text": "Алма-Ата"
          }, {
            "value": 4,
            "text": "Улица"
          }, {
            "value": 5,
            "text": "Югозападная улица"
          }, {
            "value": 6,
            "text": "Юговая улица"
          }, {
            "value": 7,
            "text": "Западная улица"
          }, {
            "value": 8,
            "text": "Южная улица"
          }, {
            "value": 9,
            "text": "Другая улица"
          }]);
        }
      }
    });
  }

  function setChecked(target, type) {
    var checked = $(target).find("input[type='checkbox']:checked").length;

    if (checked) {
      $(target).find('select option:first').html('Выбрано: ' + checked + ' удобств(а)');
    } else {
      $(target).find('select option:first').html('Удобства*');
    }
  }

  $.fn.checkselect = function () {
    this.wrapInner('<div class="checkselect-popup"></div>');
    this.prepend('<div class="checkselect-control">' + '<select class="form-control custom-select"><option></option></select>' + '<div class="checkselect-over"></div>' + '</div>');
    this.each(function () {
      setChecked(this);
    });
    this.find('input[type="checkbox"]').click(function () {
      setChecked($(this).parents('.checkselect'));
    });
    this.parent().find('.checkselect-control').on('click', function () {
      var $popup = $(this).next();
      $('.checkselect-popup').not($popup).css('display', 'none');

      if ($popup.is(':hidden')) {
        $popup.css('display', 'block');
        $(this).find('select').focus();
      } else {
        $popup.css('display', 'none');
      }
    });
    $('html, body').on('click', function (e) {
      if ($(e.target).closest('.checkselect').length == 0) {
        $('.checkselect-popup').css('display', 'none');
      }
    });
  };
})(jQuery);

$('.checkselect').checkselect();

/***/ }),

/***/ 3:
/*!*************************************!*\
  !*** multi ./src/js/pages/board.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /app/assets/src/js/pages/board.js */"./src/js/pages/board.js");


/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,