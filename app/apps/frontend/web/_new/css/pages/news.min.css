.p-news .news-wrapper {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  margin: 0 -0.5rem -1rem;
}
@media (min-width: 1024px) {
  .p-news .news-wrapper {
    margin: 0 -0.7rem -1.4rem;
  }
}
@media (min-width: 1200px) {
  .p-news .news-wrapper {
    margin: 0 -0.6rem -1.4rem;
    justify-content: flex-start;
  }
}
.p-news .news-card-wrapper {
  margin: 0 0 1rem;
}
@media (min-width: 544px) {
  .p-news .news-card-wrapper {
    padding: 0 0.5rem 0;
  }
}
@media (min-width: 1024px) {
  .p-news .news-card-wrapper {
    margin: 0 0 1.4rem 0;
    padding: 0 0.7rem 0;
  }
}
@media (min-width: 1200px) {
  .p-news .news-card-wrapper {
    padding: 0 0.6rem 0;
    width: 33.33%;
  }
}
.p-news .news-card {
  overflow: hidden;
  max-width: 375px;
  width: 100%;
  border-radius: 0.4rem;
  box-shadow: 0 12px 16px rgba(5, 28, 55, 0.1);
}
.p-news .news-item {
  padding: 1.25rem;
}
.p-news .news-image {
  width: 100%;
  height: 100%;
}
.p-news .news-publication-date {
  font-weight: 400;
  font-size: 0.75rem;
  color: #4C4C4C;
  opacity: 0.8;
  margin-bottom: 0.4rem;
}
.p-news .news-subtitle {
  font-weight: 600;
  font-size: 1.1rem;
  margin-bottom: 0.8rem;
  line-height: 1.2;
}
.p-news .news-subtitle a {
  color: #151515;
}
.p-news .news-subtitle a:hover {
  color: #FFA801;
}
.p-news .news-text {
  font-weight: 400;
  font-size: 0.75rem;
  color: #4C4C4C;
  opacity: 0.8;
  margin-bottom: 1.25rem;
}
.p-news .news-list .btn-warning {
  font-weight: 600;
  font-size: 0.9rem;
  text-transform: uppercase;
  color: #151515;
  width: 256px;
  padding: 0.7rem 0.5rem;
  background: linear-gradient(180deg, #FFBC3A 0%, #FFA801 100%);
}
.p-news .section-title {
  width: 100%;
  text-align: center;
}
@media (min-width: 1024px) {
  .p-news .section-title {
    text-align: left;
    margin-bottom: 3rem;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2Nzcy9hcHBsaWNhdGlvbi9wYWdlcy9uZXdzL19uZXdzLWNhcmQuc2NzcyIsIndlYnBhY2s6Ly8vLi9zcmMvc2Nzcy9fYnVpbGQvcGFnZXMvbmV3cy5zY3NzIiwid2VicGFjazovLy8uL3NyYy9zY3NzL2Jhc2UvX21lZGlhLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL3Njc3MvYmFzZS9fY29uZmlnLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL3Njc3MvYXBwbGljYXRpb24vcGFnZXMvbmV3cy9uZXdzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0k7RUFDSTtFQUNBO0VBQ0E7RUFDQTtDQ0FSO0FDY0k7RUZsQkE7SUFPUTtHQ0NWO0NBQ0Y7QUNlSTtFRnhCQTtJQVdRO0lBQ0E7R0NFVjtDQUNGO0FEQ0k7RUFDSTtDQ0NSO0FDbEJJO0VGZ0JBO0lBSVE7R0NFVjtDQUNGO0FDTEk7RUZGQTtJQVFRO0lBQ0E7R0NHVjtDQUNGO0FDTEk7RUZSQTtJQWFRO0lBQ0E7R0NJVjtDQUNGO0FEREk7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0NDR1I7QURBSTtFQUNJO0NDRVI7QURDSTtFQUNJO0VBQ0E7Q0NDUjtBREVJO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtDQ0FSO0FER0k7RUFDSTtFQUNBO0VBQ0E7RUFDQTtDQ0RSO0FER1E7RUFDSTtDQ0RaO0FERVk7RUFDSSxlR2pFRTtDRmlFbEI7QURLSTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7Q0NIUjtBRE9RO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7Q0NMWjtBR2pGSTtFQUNJO0VBQ0E7Q0htRlI7QUN0RUk7RUVmQTtJQUtRO0lBQ0E7R0hvRlYiLCJmaWxlIjoiY3NzL3BhZ2VzL25ld3MubWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5uZXdzIHtcbiAgICAmLXdyYXBwZXIge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICBtYXJnaW46IDAgLTAuNXJlbSAtMXJlbTtcblxuICAgICAgICBAaW5jbHVkZSB0YWJsZXQtbGFuZCgpIHtcbiAgICAgICAgICAgIG1hcmdpbjogMCAtMC43cmVtIC0xLjRyZW07XG4gICAgICAgIH1cblxuICAgICAgICBAaW5jbHVkZSBkZXNrdG9wKCkge1xuICAgICAgICAgICAgbWFyZ2luOiAwIC0wLjZyZW0gLTEuNHJlbTtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICYtY2FyZC13cmFwcGVyIHtcbiAgICAgICAgbWFyZ2luOiAwIDAgMXJlbTtcblxuICAgICAgICBAaW5jbHVkZSBwaG9uZSgpIHtcbiAgICAgICAgICAgIHBhZGRpbmc6IDAgMC41cmVtIDA7XG4gICAgICAgIH1cblxuICAgICAgICBAaW5jbHVkZSB0YWJsZXQtbGFuZCgpIHtcbiAgICAgICAgICAgIG1hcmdpbjogMCAwIDEuNHJlbSAwO1xuICAgICAgICAgICAgcGFkZGluZzogMCAwLjdyZW0gMDtcbiAgICAgICAgfVxuXG4gICAgICAgIEBpbmNsdWRlIGRlc2t0b3AoKSB7XG4gICAgICAgICAgICBwYWRkaW5nOiAwIDAuNnJlbSAwO1xuICAgICAgICAgICAgd2lkdGg6IDMzLjMzJTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICYtY2FyZCB7XG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgIG1heC13aWR0aDogMzc1cHg7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBib3JkZXItcmFkaXVzOiAwLjRyZW07XG4gICAgICAgIGJveC1zaGFkb3c6IDAgMTJweCAxNnB4IHJnYmEoNSwgMjgsIDU1LCAwLjEpO1xuICAgIH1cblxuICAgICYtaXRlbSB7XG4gICAgICAgIHBhZGRpbmc6IDEuMjVyZW07XG4gICAgfVxuXG4gICAgJi1pbWFnZSB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgfVxuXG4gICAgJi1wdWJsaWNhdGlvbi1kYXRlIHtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICAgICAgZm9udC1zaXplOiAwLjc1cmVtO1xuICAgICAgICBjb2xvcjogIzRDNEM0QztcbiAgICAgICAgb3BhY2l0eTogMC44O1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAwLjRyZW07XG4gICAgfVxuXG4gICAgJi1zdWJ0aXRsZSB7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgICAgIGZvbnQtc2l6ZTogMS4xcmVtO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAwLjhyZW07XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjI7XG5cbiAgICAgICAgYSB7XG4gICAgICAgICAgICBjb2xvcjogIzE1MTUxNTtcbiAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICAgIGNvbG9yOiAkY29sb3ItYmFzZS1saW5rO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgJi10ZXh0IHtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICAgICAgZm9udC1zaXplOiAwLjc1cmVtO1xuICAgICAgICBjb2xvcjogIzRDNEM0QztcbiAgICAgICAgb3BhY2l0eTogMC44O1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAxLjI1cmVtO1xuICAgIH1cblxuICAgICYtbGlzdCB7XG4gICAgICAgIC5idG4td2FybmluZyB7XG4gICAgICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgICAgICAgZm9udC1zaXplOiAwLjlyZW07XG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICAgICAgY29sb3I6ICMxNTE1MTU7XG4gICAgICAgICAgICB3aWR0aDogMjU2cHg7XG4gICAgICAgICAgICBwYWRkaW5nOiAwLjdyZW0gMC41cmVtO1xuICAgICAgICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDE4MGRlZywgI0ZGQkMzQSAwJSwgI0ZGQTgwMSAxMDAlKTtcbiAgICAgICAgfVxuICAgIH1cbn0iLCIucC1uZXdzIC5uZXdzLXdyYXBwZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBtYXJnaW46IDAgLTAuNXJlbSAtMXJlbTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLnAtbmV3cyAubmV3cy13cmFwcGVyIHtcbiAgICBtYXJnaW46IDAgLTAuN3JlbSAtMS40cmVtO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC5wLW5ld3MgLm5ld3Mtd3JhcHBlciB7XG4gICAgbWFyZ2luOiAwIC0wLjZyZW0gLTEuNHJlbTtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIH1cbn1cbi5wLW5ld3MgLm5ld3MtY2FyZC13cmFwcGVyIHtcbiAgbWFyZ2luOiAwIDAgMXJlbTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAucC1uZXdzIC5uZXdzLWNhcmQtd3JhcHBlciB7XG4gICAgcGFkZGluZzogMCAwLjVyZW0gMDtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAucC1uZXdzIC5uZXdzLWNhcmQtd3JhcHBlciB7XG4gICAgbWFyZ2luOiAwIDAgMS40cmVtIDA7XG4gICAgcGFkZGluZzogMCAwLjdyZW0gMDtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAucC1uZXdzIC5uZXdzLWNhcmQtd3JhcHBlciB7XG4gICAgcGFkZGluZzogMCAwLjZyZW0gMDtcbiAgICB3aWR0aDogMzMuMzMlO1xuICB9XG59XG4ucC1uZXdzIC5uZXdzLWNhcmQge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBtYXgtd2lkdGg6IDM3NXB4O1xuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyLXJhZGl1czogMC40cmVtO1xuICBib3gtc2hhZG93OiAwIDEycHggMTZweCByZ2JhKDUsIDI4LCA1NSwgMC4xKTtcbn1cbi5wLW5ld3MgLm5ld3MtaXRlbSB7XG4gIHBhZGRpbmc6IDEuMjVyZW07XG59XG4ucC1uZXdzIC5uZXdzLWltYWdlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbn1cbi5wLW5ld3MgLm5ld3MtcHVibGljYXRpb24tZGF0ZSB7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMC43NXJlbTtcbiAgY29sb3I6ICM0QzRDNEM7XG4gIG9wYWNpdHk6IDAuODtcbiAgbWFyZ2luLWJvdHRvbTogMC40cmVtO1xufVxuLnAtbmV3cyAubmV3cy1zdWJ0aXRsZSB7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGZvbnQtc2l6ZTogMS4xcmVtO1xuICBtYXJnaW4tYm90dG9tOiAwLjhyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjI7XG59XG4ucC1uZXdzIC5uZXdzLXN1YnRpdGxlIGEge1xuICBjb2xvcjogIzE1MTUxNTtcbn1cbi5wLW5ld3MgLm5ld3Mtc3VidGl0bGUgYTpob3ZlciB7XG4gIGNvbG9yOiAjRkZBODAxO1xufVxuLnAtbmV3cyAubmV3cy10ZXh0IHtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAwLjc1cmVtO1xuICBjb2xvcjogIzRDNEM0QztcbiAgb3BhY2l0eTogMC44O1xuICBtYXJnaW4tYm90dG9tOiAxLjI1cmVtO1xufVxuLnAtbmV3cyAubmV3cy1saXN0IC5idG4td2FybmluZyB7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGZvbnQtc2l6ZTogMC45cmVtO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBjb2xvcjogIzE1MTUxNTtcbiAgd2lkdGg6IDI1NnB4O1xuICBwYWRkaW5nOiAwLjdyZW0gMC41cmVtO1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCAjRkZCQzNBIDAlLCAjRkZBODAxIDEwMCUpO1xufVxuLnAtbmV3cyAuc2VjdGlvbi10aXRsZSB7XG4gIHdpZHRoOiAxMDAlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5wLW5ld3MgLnNlY3Rpb24tdGl0bGUge1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgbWFyZ2luLWJvdHRvbTogM3JlbTtcbiAgfVxufSIsIkBtaXhpbiBwaG9uZSgpIHtcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgfVxufVxuXG5AbWl4aW4gcGhvbmUtbGFuZCgpIHtcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xuICAgICAgICBAY29udGVudDtcbiAgICB9XG59XG5cbkBtaXhpbiB0YWJsZXQoKSB7XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgIH1cbn1cblxuQG1peGluIHRhYmxldC1sYW5kKCkge1xuICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgfVxufVxuXG5AbWl4aW4gZGVza3RvcCgpIHtcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgIH1cbn1cblxuQG1peGluIGRlc2t0b3AtbGFyZ2UoKSB7XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDE0MDBweCkge1xuICAgICAgICBAY29udGVudDtcbiAgICB9XG59IiwiLy8gRm9udHNcbiRmb250LWJhc2U6IE1vbnRzZXJyYXQsIHNhbnMtc2VyaWY7XG5cbi8vIENvbG9yc1xuJGNvbG9yLWJhc2UtbGluazogI0ZGQTgwMTtcbiRjb2xvci1iYXNlLWJvcmRlcjogI0ZGQTgwMTtcbiRjb2xvci13YXJuaW5nOiAjRkZBODAxO1xuJGNvbG9yLWZvcm0tZm9jdXM6ICNGRkE4MDE7XG5cbiRjb2xvci10ZXh0LWgyLWxpZ3RoOiAjZmZmZmZmO1xuJGNvbG9yLXRleHQtaDI6ICMxNTE1MTU7XG4kY29sb3ItdGV4dDogIzRjNGM0YztcbiRjb2xvci10ZXh0LWxpbms6ICMzMzMzMzM7IiwiLnAtbmV3cyB7XG5cbiAgICBAaW1wb3J0ICcuLi8uLi8uLi9hcHBsaWNhdGlvbi9wYWdlcy9uZXdzL19uZXdzLWNhcmQnO1xuXG4gICAgLnNlY3Rpb24tdGl0bGUge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG4gICAgICAgIEBpbmNsdWRlIHRhYmxldC1sYW5kKCkge1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDNyZW07XG4gICAgICAgIH1cbiAgICB9XG59Il0sInNvdXJjZVJvb3QiOiIifQ==*/