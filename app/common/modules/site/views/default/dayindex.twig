

{#
    Главная страница
    @var common\modules\agency\models\Apartment agencyDataProvider
    @var common\modules\agency\models\SearchAdvert agencySearch
    @var common\modules\partners\models\ApartmentAdvert partnersAdverts
    @var common\modules\partners\models\SearchAdvert searchModel
    @var \yii\web\View this
#}
{% extends "@app/themes/basic/layouts/main.twig" %}

{% block title %}{{ metaData['meta_title'] }}{% endblock %}

{% block header %}

    <header class="header index-header {{ getPartOfTheDay() }}">
        <div class="cdaem container">
            <div class="row">
                <div class="logo col-xs-12 col-md-3">
                    <a href="/"><img src="/basic-images/arenda-kvartir-posutochno-logo.png"
                                     alt="Все города России и СНГ" title="Все города России и СНГ"/></a>
                </div>
                <div class="seo-text col-xs-12 col-sm-6">
                    <div class="size">
                        {{ seo_text_widget({'type' : 'header' }) | raw }}
                    </div>
                </div>
                <div class="cls col-sm-6 col-xs-12 col-md-3">
                    <div class="login-links">{{ this.renderDynamic('return $this->render("@common/modules/site/views/default/logged.twig");') | raw }}</div>
                    <div class="social-links">
                        <ul>
                            <li><img src="/basic-images/Message-ico.png" alt="messege"/></li>
                            <li><a href="https://www.facebook.com/cdaem.ru" rel="nofollow"><img
                                            src="/basic-images/facebook-ico.png" alt="facebook"/></a></li>
                            <li><a href="https://vk.com/cdaemru" rel="nofollow"><img src="/basic-images/vk-ico.png"
                                                                                     alt="vk"/></a></li>
                            <li><a href="https://plus.google.com/communities/104623882749857804458" rel="nofollow"><img
                                            src="/basic-images/google-plus-ico.png" alt="google-plus"/></a></li>
                            <li><a href="skype:cdaemru" rel="nofollow"><img src="/basic-images/skype-ico.png"
                                                                            alt="skype"/></a></li>

                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <div class="notion">
            {% include('@common/modules/site/views/default/_header.twig') %}
        </div>

    </header>
    <div class="callbackbar-block">
        <div class="container">
            <div class="row">
                <div class="col-md-7 callback-title-link-block">
                    <span class="title-span">Квартиры от <a href="/" class="or-link">Сдаём.ру</a> без посредников - Москва</span>
                    <span class="call" data-toggle="modal" data-target="#modal-callback"></span>
                </div>
                <div class="col-md-2">
                    <div class="callback-phone-block">
                        <div class="row phone-1"><span class="c-phone">+7 (903) 799-17-99</span></div>
                        <div class="row phone-2"><span class="m-phone" style="">+7 (915) 455-94-94</span></div>
                    </div>
                </div>
                <div class="col-md-3 callback-btn-block">
                    <a href="{{ path(['/helpdesk/default/index']) }}" class="callback-btn">Связаться с диспетчером <br>
                        Cdaem.ru</a>
                </div>
            </div>

        </div>
    </div>


    {#
        Модальное окно для заказа обратного звонка
    #}
    <div class="modal fade" id="modal-callback" data-title="Заказать обратный звонок">

        {% set form = active_form_begin({
            'id' : 'form-callback',
            'action' : ['/callback/default/index'],
            'enableClientScript' : false,
            'options' : {'class' : 'horizontal'}
        }) %}

        {{ form.field(callback, 'phone').textInput({'placeholder' : '+7 (___) ___-____'}) | raw }}


        <div class="form-group text-center">
            <input type="submit" value="Отправить" class="btn btn-primary"/>
        </div>
        {{ active_form_end() }}

    </div>


{% endblock header %}


{% block navbarStickyHeader %}sticky-header{% endblock %}


{% block content %}

    {{ this.registerMetaTag({'name' : 'description', 'content' : metaData['meta_description']}) }}
    {{ this.registerMetaTag({'name' : 'keywords', 'content' : metaData['meta_keywords']}) }}

    {{ use('common/modules/agency/widgets/frontend/PreviewAdvert') }}

    {{ use('frontend/themes/basic/assets/SliderAsset') }}
    {{ register_slider_asset() }}

    {{ use('frontend/themes/basic/assets/SlickAsset') }}
    {{ register_slick_asset() }}

    {{ use('common/modules/geo/assets/frontend/MetroMskAsset') }}
    {{ register_metro_msk_asset() }}

    {{ use('common/modules/agency/assets/frontend/AgencyAsset') }}
    {{ register_agency_asset() }}

    {% if specialAdverts is not empty %}
        <div class="container special-block">

            <div class="d-title"><h4>Спецпредложения на сегодня</h4></div>
            <div class="special-advert-block">
                <div class="deals">
                    {% for specialAdvert in specialAdverts %}
                        {{ preview_advert_widget({'advert': specialAdvert}) }}
                    {% endfor %}
                    <div class="clearfix"></div>
                </div>
            </div>

        </div>
    {% endif %}





    {{ this.render('@common/modules/agency/views/frontend/default/_realty.twig', {
        'searchModel': agencySearch,
        'dataProvider': agencyDataProvider,
        'metaData' : metaData,
    }) | raw }}

    <div class="container">

        <style type="text/css">
            #map {
                margin-top: 20px;
                width: 100%;
                height: 800px;
            }

            .balloon-info {
                width: 250px;
                height: 90px;
                display: block;
            }

            .balloon-info .balloon-more {
                display: inline-block;
                margin-top: 15px;
                float: left;
            }

            .balloon-info .balloon-view {
                width: 75px;
                display: block;
                float: left;
            }

            .balloon-info .balloon-view p {
                width: 100%;
                display: block;
                margin: 5px 0 0 0;
                padding: 0;
                font-size: 10px;
                text-overflow: clip;
                overflow: hidden;
                line-height: 1;
            }

            .balloon-info .balloon-property {
                font-size: 90%;
                clear: left;
                line-height: 1.3;
                margin-top: 10px;
                height: 18px;
                overflow: hidden;
                width: 100%;
                white-space: nowrap;
                text-overflow: ellipsis;
            }

            .balloon-info .balloon-image {
                width: 65px;
                height: 65px;
                display: block;
                background-size: cover;
                background-position: center;
            }

            .balloon-info .balloon-desc {
                overflow: hidden;
                text-align: right;
            }

            .balloon-info .balloon-desc span:first-child {
                width: 65px;
                display: block;
                text-align: left;
                float: left;
            }

            .balloon-info .balloon-desc p {
                margin: 0;
                padding: 0;
                height: 22px;
                overflow: hidden;
                width: 100%;
                white-space: nowrap;
                text-overflow: ellipsis;
            }

        </style>


        <div id="map"></div>


        <script src="//api-maps.yandex.ru/2.1/?lang=ru-RU" type="text/javascript"></script>
        <script type="text/javascript">

            ymaps.ready(init);


            function init() {
                var myMap = new ymaps.Map('map', {
                        center: [{{ city.longitude }}, {{ city.latitude }}],
                        zoom: 10
                    }),
                    objectManager = new ymaps.ObjectManager({
                        clusterize: true,
                        gridSize: 32
                    });

                // Задаём опции кластеров
                objectManager.clusters.options.set({
                    preset: 'islands#blueClusterIcons',
                    //balloonContentLayout: 'cluster#balloonCarousel',
                    //clusterBalloonPagerSize: 5,
                    //clusterBalloonPanelMaxMapArea: 0,
                    balloonContentLayoutWidth: 400,
                    balloonContentLayoutHeight: 300
                });

                var activeObjectMonitor = new ymaps.Monitor(objectManager.clusters.state);

                // При клике на некластеризованные объекты получаем содержимое балуна
                objectManager.objects.events.add('click', function (e) {
                    var objectId = e.get('objectId');
                    getBalloonData(objectId, function (data) {
                        render(data, objectId);
                    });
                });

                // В кластеризованных объектах отслеживаем изменение выбранного объекта
                activeObjectMonitor.add('activeObject', function () {
                    var objectId = activeObjectMonitor.get('activeObject').id;
                    getBalloonData(objectId, function (data) {
                        render(data, objectId);
                    });
                });

                // Проверяем, есть ли у выбранного объекта содержимое балуна
                /*function hasBalloonData(objectId) {
                 return objectManager.objects.getById(objectId).properties.balloonContent;
                 }*/


                // Получаем данные и устанавливаем содержимое балуна
                /*function setBalloonData(objectId) {
                 if (!hasBalloonData(objectId)) {
                 getBalloonData(objectId).done(function (data) {
                 var object = objectManager.objects.getById(objectId);
                 object.properties.balloonContent = data;
                 var objectState = objectManager.getObjectState(objectId);
                 if (objectState.isClustered) {
                 objectManager.clusters.balloon.open(objectState.cluster.id);
                 }
                 else {
                 objectManager.objects.balloon.open(objectId);
                 }
                 });
                 }
                 }*/


                myMap.geoObjects.add(objectManager);
                $.ajax({
                    url: '/geo/map',
                    dataType: 'json'
                })
                    .done(function (data) {
                        objectManager.add(data);
                    })
                    .fail(function () {
                    });


                // Функция, осуществляющая запрос за данными балуна на сервер.
                function getBalloonData(objectId, done) {
                    var dataDeferred = ymaps.vow.defer();
                    $.ajax({
                        url: '/geo/map/' + objectId,
                        type: 'GET',
                        dataType: 'html'
                    })
                        .done(function (data) {
                            done(data);
                            dataDeferred.resolve(data);
                        })
                        .fail(function () {
                            console.log("full-story error");
                            dataDeferred.resolve('error');
                        });
                }


                function render(data, objectId) {
                    var object = objectManager.objects.getById(objectId);
                    object.properties.balloonContent = data;
                    var objectState = objectManager.getObjectState(objectId);
                    if (objectState.isClustered) {
                        objectManager.clusters.balloon.open(objectState.cluster.id);
                    } else {
                        objectManager.objects.balloon.open(objectId);
                    }
                }
            }


        </script>

    </div>





{% endblock content %}

