.p-news .news-wrapper {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  margin: 0 -0.5rem -1rem;
}
@media (min-width: 1024px) {
  .p-news .news-wrapper {
    margin: 0 -0.7rem -1.4rem;
  }
}
@media (min-width: 1200px) {
  .p-news .news-wrapper {
    margin: 0 -0.6rem -1.4rem;
    justify-content: flex-start;
  }
}
.p-news .news-card-wrapper {
  margin: 0 0 1rem;
}
@media (min-width: 544px) {
  .p-news .news-card-wrapper {
    padding: 0 0.5rem 0;
  }
}
@media (min-width: 1024px) {
  .p-news .news-card-wrapper {
    margin: 0 0 1.4rem 0;
    padding: 0 0.7rem 0;
  }
}
@media (min-width: 1200px) {
  .p-news .news-card-wrapper {
    padding: 0 0.6rem 0;
    width: 33.33%;
  }
}
.p-news .news-card {
  overflow: hidden;
  max-width: 375px;
  width: 100%;
  border-radius: 0.4rem;
  box-shadow: 0 12px 16px rgba(5, 28, 55, 0.1);
}
.p-news .news-item {
  padding: 1.25rem;
}
.p-news .news-image {
  width: 100%;
  height: 100%;
}
.p-news .news-publication-date {
  font-weight: 400;
  font-size: 0.75rem;
  color: #4C4C4C;
  opacity: 0.8;
  margin-bottom: 0.4rem;
}
.p-news .news-subtitle {
  font-weight: 600;
  font-size: 1.1rem;
  margin-bottom: 0.8rem;
  line-height: 1.2;
}
.p-news .news-subtitle a {
  color: #151515;
}
.p-news .news-subtitle a:hover {
  color: #FFA801;
}
.p-news .news-text {
  font-weight: 400;
  font-size: 0.75rem;
  color: #4C4C4C;
  opacity: 0.8;
  margin-bottom: 1.25rem;
}
.p-news .news-list .btn-warning {
  font-weight: 600;
  font-size: 0.9rem;
  text-transform: uppercase;
  color: #151515;
  width: 256px;
  padding: 0.7rem 0.5rem;
  background: linear-gradient(180deg, #FFBC3A 0%, #FFA801 100%);
}
.p-news .section-title {
  width: 100%;
  text-align: center;
}
@media (min-width: 1024px) {
  .p-news .section-title {
    text-align: left;
    margin-bottom: 3rem;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9kZW1vL3NyYy9zY3NzL2FwcGxpY2F0aW9uL3BhZ2VzL25ld3MvX25ld3MtY2FyZC5zY3NzIiwid2VicGFjazovLy8uL2RlbW8vc3JjL3Njc3MvX2J1aWxkL3BhZ2VzL25ld3Muc2NzcyIsIndlYnBhY2s6Ly8vLi9kZW1vL3NyYy9zY3NzL2Jhc2UvX21lZGlhLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vZGVtby9zcmMvc2Nzcy9iYXNlL19jb25maWcuc2NzcyIsIndlYnBhY2s6Ly8vLi9kZW1vL3NyYy9zY3NzL2FwcGxpY2F0aW9uL3BhZ2VzL25ld3MvbmV3cy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNJO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7Q0NBUjtBQ2NJO0VGbEJBO0lBT1E7R0NDVjtDQUNGO0FDZUk7RUZ4QkE7SUFXUTtJQUNBO0dDRVY7Q0FDRjtBRENJO0VBQ0k7Q0NDUjtBQ2xCSTtFRmdCQTtJQUlRO0dDRVY7Q0FDRjtBQ0xJO0VGRkE7SUFRUTtJQUNBO0dDR1Y7Q0FDRjtBQ0xJO0VGUkE7SUFhUTtJQUNBO0dDSVY7Q0FDRjtBRERJO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtDQ0dSO0FEQUk7RUFDSTtDQ0VSO0FEQ0k7RUFDSTtFQUNBO0NDQ1I7QURFSTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7Q0NBUjtBREdJO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7Q0NEUjtBREdRO0VBQ0k7Q0NEWjtBREVZO0VBQ0ksZUdqRUU7Q0ZpRWxCO0FES0k7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0NDSFI7QURPUTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0NDTFo7QUdqRkk7RUFDSTtFQUNBO0NIbUZSO0FDdEVJO0VFZkE7SUFLUTtJQUNBO0dIb0ZWIiwiZmlsZSI6ImNzcy9wYWdlcy9uZXdzLm1pbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubmV3cyB7XG4gICAgJi13cmFwcGVyIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgbWFyZ2luOiAwIC0wLjVyZW0gLTFyZW07XG5cbiAgICAgICAgQGluY2x1ZGUgdGFibGV0LWxhbmQoKSB7XG4gICAgICAgICAgICBtYXJnaW46IDAgLTAuN3JlbSAtMS40cmVtO1xuICAgICAgICB9XG5cbiAgICAgICAgQGluY2x1ZGUgZGVza3RvcCgpIHtcbiAgICAgICAgICAgIG1hcmdpbjogMCAtMC42cmVtIC0xLjRyZW07XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmLWNhcmQtd3JhcHBlciB7XG4gICAgICAgIG1hcmdpbjogMCAwIDFyZW07XG5cbiAgICAgICAgQGluY2x1ZGUgcGhvbmUoKSB7XG4gICAgICAgICAgICBwYWRkaW5nOiAwIDAuNXJlbSAwO1xuICAgICAgICB9XG5cbiAgICAgICAgQGluY2x1ZGUgdGFibGV0LWxhbmQoKSB7XG4gICAgICAgICAgICBtYXJnaW46IDAgMCAxLjRyZW0gMDtcbiAgICAgICAgICAgIHBhZGRpbmc6IDAgMC43cmVtIDA7XG4gICAgICAgIH1cblxuICAgICAgICBAaW5jbHVkZSBkZXNrdG9wKCkge1xuICAgICAgICAgICAgcGFkZGluZzogMCAwLjZyZW0gMDtcbiAgICAgICAgICAgIHdpZHRoOiAzMy4zMyU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmLWNhcmQge1xuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICBtYXgtd2lkdGg6IDM3NXB4O1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMC40cmVtO1xuICAgICAgICBib3gtc2hhZG93OiAwIDEycHggMTZweCByZ2JhKDUsIDI4LCA1NSwgMC4xKTtcbiAgICB9XG5cbiAgICAmLWl0ZW0ge1xuICAgICAgICBwYWRkaW5nOiAxLjI1cmVtO1xuICAgIH1cblxuICAgICYtaW1hZ2Uge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgIH1cblxuICAgICYtcHVibGljYXRpb24tZGF0ZSB7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgICAgIGZvbnQtc2l6ZTogMC43NXJlbTtcbiAgICAgICAgY29sb3I6ICM0QzRDNEM7XG4gICAgICAgIG9wYWNpdHk6IDAuODtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMC40cmVtO1xuICAgIH1cblxuICAgICYtc3VidGl0bGUge1xuICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgICBmb250LXNpemU6IDEuMXJlbTtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMC44cmVtO1xuICAgICAgICBsaW5lLWhlaWdodDogMS4yO1xuXG4gICAgICAgIGEge1xuICAgICAgICAgICAgY29sb3I6ICMxNTE1MTU7XG4gICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICBjb2xvcjogJGNvbG9yLWJhc2UtbGluaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgICYtdGV4dCB7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgICAgIGZvbnQtc2l6ZTogMC43NXJlbTtcbiAgICAgICAgY29sb3I6ICM0QzRDNEM7XG4gICAgICAgIG9wYWNpdHk6IDAuODtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMS4yNXJlbTtcbiAgICB9XG5cbiAgICAmLWxpc3Qge1xuICAgICAgICAuYnRuLXdhcm5pbmcge1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMC45cmVtO1xuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgICAgIGNvbG9yOiAjMTUxNTE1O1xuICAgICAgICAgICAgd2lkdGg6IDI1NnB4O1xuICAgICAgICAgICAgcGFkZGluZzogMC43cmVtIDAuNXJlbTtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxODBkZWcsICNGRkJDM0EgMCUsICNGRkE4MDEgMTAwJSk7XG4gICAgICAgIH1cbiAgICB9XG59IiwiLnAtbmV3cyAubmV3cy13cmFwcGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgbWFyZ2luOiAwIC0wLjVyZW0gLTFyZW07XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5wLW5ld3MgLm5ld3Mtd3JhcHBlciB7XG4gICAgbWFyZ2luOiAwIC0wLjdyZW0gLTEuNHJlbTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAucC1uZXdzIC5uZXdzLXdyYXBwZXIge1xuICAgIG1hcmdpbjogMCAtMC42cmVtIC0xLjRyZW07XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICB9XG59XG4ucC1uZXdzIC5uZXdzLWNhcmQtd3JhcHBlciB7XG4gIG1hcmdpbjogMCAwIDFyZW07XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgLnAtbmV3cyAubmV3cy1jYXJkLXdyYXBwZXIge1xuICAgIHBhZGRpbmc6IDAgMC41cmVtIDA7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLnAtbmV3cyAubmV3cy1jYXJkLXdyYXBwZXIge1xuICAgIG1hcmdpbjogMCAwIDEuNHJlbSAwO1xuICAgIHBhZGRpbmc6IDAgMC43cmVtIDA7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLnAtbmV3cyAubmV3cy1jYXJkLXdyYXBwZXIge1xuICAgIHBhZGRpbmc6IDAgMC42cmVtIDA7XG4gICAgd2lkdGg6IDMzLjMzJTtcbiAgfVxufVxuLnAtbmV3cyAubmV3cy1jYXJkIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgbWF4LXdpZHRoOiAzNzVweDtcbiAgd2lkdGg6IDEwMCU7XG4gIGJvcmRlci1yYWRpdXM6IDAuNHJlbTtcbiAgYm94LXNoYWRvdzogMCAxMnB4IDE2cHggcmdiYSg1LCAyOCwgNTUsIDAuMSk7XG59XG4ucC1uZXdzIC5uZXdzLWl0ZW0ge1xuICBwYWRkaW5nOiAxLjI1cmVtO1xufVxuLnAtbmV3cyAubmV3cy1pbWFnZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG59XG4ucC1uZXdzIC5uZXdzLXB1YmxpY2F0aW9uLWRhdGUge1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDAuNzVyZW07XG4gIGNvbG9yOiAjNEM0QzRDO1xuICBvcGFjaXR5OiAwLjg7XG4gIG1hcmdpbi1ib3R0b206IDAuNHJlbTtcbn1cbi5wLW5ld3MgLm5ld3Mtc3VidGl0bGUge1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LXNpemU6IDEuMXJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMC44cmVtO1xuICBsaW5lLWhlaWdodDogMS4yO1xufVxuLnAtbmV3cyAubmV3cy1zdWJ0aXRsZSBhIHtcbiAgY29sb3I6ICMxNTE1MTU7XG59XG4ucC1uZXdzIC5uZXdzLXN1YnRpdGxlIGE6aG92ZXIge1xuICBjb2xvcjogI0ZGQTgwMTtcbn1cbi5wLW5ld3MgLm5ld3MtdGV4dCB7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMC43NXJlbTtcbiAgY29sb3I6ICM0QzRDNEM7XG4gIG9wYWNpdHk6IDAuODtcbiAgbWFyZ2luLWJvdHRvbTogMS4yNXJlbTtcbn1cbi5wLW5ld3MgLm5ld3MtbGlzdCAuYnRuLXdhcm5pbmcge1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LXNpemU6IDAuOXJlbTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgY29sb3I6ICMxNTE1MTU7XG4gIHdpZHRoOiAyNTZweDtcbiAgcGFkZGluZzogMC43cmVtIDAuNXJlbTtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDE4MGRlZywgI0ZGQkMzQSAwJSwgI0ZGQTgwMSAxMDAlKTtcbn1cbi5wLW5ld3MgLnNlY3Rpb24tdGl0bGUge1xuICB3aWR0aDogMTAwJTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAucC1uZXdzIC5zZWN0aW9uLXRpdGxlIHtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIG1hcmdpbi1ib3R0b206IDNyZW07XG4gIH1cbn0iLCJAbWl4aW4gcGhvbmUoKSB7XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgIH1cbn1cblxuQG1peGluIHBob25lLWxhbmQoKSB7XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSBhbmQgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgfVxufVxuXG5AbWl4aW4gdGFibGV0KCkge1xuICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgICAgICBAY29udGVudDtcbiAgICB9XG59XG5cbkBtaXhpbiB0YWJsZXQtbGFuZCgpIHtcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgIH1cbn1cblxuQG1peGluIGRlc2t0b3AoKSB7XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAgICAgICBAY29udGVudDtcbiAgICB9XG59XG5cbkBtaXhpbiBkZXNrdG9wLWxhcmdlKCkge1xuICAgIEBtZWRpYSAobWluLXdpZHRoOiAxNDAwcHgpIHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgfVxufSIsIi8vIEZvbnRzXG4kZm9udC1iYXNlOiBNb250c2VycmF0LCBzYW5zLXNlcmlmO1xuXG4vLyBDb2xvcnNcbiRjb2xvci1iYXNlLWxpbms6ICNGRkE4MDE7XG4kY29sb3ItYmFzZS1ib3JkZXI6ICNGRkE4MDE7XG4kY29sb3Itd2FybmluZzogI0ZGQTgwMTtcbiRjb2xvci1mb3JtLWZvY3VzOiAjRkZBODAxO1xuXG4kY29sb3ItdGV4dC1oMi1saWd0aDogI2ZmZmZmZjtcbiRjb2xvci10ZXh0LWgyOiAjMTUxNTE1O1xuJGNvbG9yLXRleHQ6ICM0YzRjNGM7XG4kY29sb3ItdGV4dC1saW5rOiAjMzMzMzMzOyIsIi5wLW5ld3Mge1xuXG4gICAgQGltcG9ydCAnLi4vLi4vLi4vYXBwbGljYXRpb24vcGFnZXMvbmV3cy9fbmV3cy1jYXJkJztcblxuICAgIC5zZWN0aW9uLXRpdGxlIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAgICAgICBAaW5jbHVkZSB0YWJsZXQtbGFuZCgpIHtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAzcmVtO1xuICAgICAgICB9XG4gICAgfVxufSJdLCJzb3VyY2VSb290IjoiIn0=*/