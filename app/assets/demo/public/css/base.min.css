html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after {
  content: "";
  content: none;
}

q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  outline: none;
}

*::-moz-focus-inner {
  border: 0;
  outline: 0;
}

:focus {
  outline: none;
}

html, body {
  width: 100%;
  height: 100%;
  min-width: 375px;
  font-family: Montserrat, sans-serif;
}

body {
  font-family: Montserrat, sans-serif;
  display: flex;
  flex-direction: column;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  -moz-font-smoothing: antialiased;
  -webkit-tap-highlight-color: transparent;
  font-size: 13px;
  line-height: 1.2rem;
}
@media (min-width: 768px) {
  body {
    font-size: 14px;
  }
}
@media (min-width: 1024px) {
  body {
    font-size: 15px;
  }
}

img {
  max-width: 100%;
  height: auto;
  -o-object-fit: cover;
     object-fit: cover;
}

a {
  text-decoration: none;
  cursor: pointer;
  background-color: transparent;
  transition: 300ms;
  color: #FFA801;
}
a:active, a:focus, a:hover {
  text-decoration: none;
  outline: 0;
  cursor: pointer;
}
a:hover {
  color: #cd8700;
}

strong, b {
  font-family: Montserrat, sans-serif;
  font-weight: 600;
}

p {
  font-family: Montserrat, sans-serif;
  margin-bottom: 1.2rem;
}
p:last-of-type {
  margin-bottom: 0;
}

.has-overflow, .no-scroll {
  overflow: hidden;
}

.has-ellipsis {
  text-overflow: ellipsis;
}

.no-padding {
  padding: 0;
}

.no-margin {
  margin: 0;
}

.no-events {
  pointer-events: none;
}

.object-fit {
  overflow: hidden;
  position: relative;
}
.object-fit img {
  position: absolute;
  top: 50%;
  left: 50%;
  height: auto;
  width: auto;
  min-width: 100%;
  min-height: 100%;
  transform: translate(-50%, -50%);
}

@supports ((-o-object-fit: cover) or (object-fit: cover)) {
  .object-fit img {
    position: absolute;
    left: 0;
    top: 0;
    height: 100%;
    width: 100%;
    transform: none;
    -o-object-fit: cover;
       object-fit: cover;
  }
}
.container-fluid {
  max-width: 1200px;
  padding-left: 30px;
  padding-right: 30px;
}

.text-smaller {
  font-size: 0.81rem;
  line-height: 1rem;
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/